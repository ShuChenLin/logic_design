$date
    Oct 14, 2022  20:55:21
$end
$version
    TOOL:	ncsim	15.20-s039
$end
$timescale
    1 ps
$end

$scope module Multi_Bank_Memory_t $end
$var reg       1 !    clk  $end
$var reg       1 "    ren  $end
$var reg       1 #    wen  $end
$var reg      11 $    waddr [10:0] $end
$var reg      11 %    raddr [10:0] $end
$var reg       8 &    din [7:0] $end
$var wire      1 '    dout [7] $end
$var wire      1 (    dout [6] $end
$var wire      1 )    dout [5] $end
$var wire      1 *    dout [4] $end
$var wire      1 +    dout [3] $end
$var wire      1 ,    dout [2] $end
$var wire      1 -    dout [1] $end
$var wire      1 .    dout [0] $end
$var parameter 32 /    cyc  $end

$scope module hello $end
$var wire      1 0    clk  $end
$var wire      1 1    ren  $end
$var wire      1 2    wen  $end
$var wire      1 3    waddr [10] $end
$var wire      1 4    waddr [9] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 >    raddr [10] $end
$var wire      1 ?    raddr [9] $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 '    dout [7] $end
$var wire      1 (    dout [6] $end
$var wire      1 )    dout [5] $end
$var wire      1 *    dout [4] $end
$var wire      1 +    dout [3] $end
$var wire      1 ,    dout [2] $end
$var wire      1 -    dout [1] $end
$var wire      1 .    dout [0] $end

$scope module BB $end
$var wire      1 0    clk  $end
$var wire      1 1    ren  $end
$var wire      1 2    wen  $end
$var wire      1 >    raddr [10] $end
$var wire      1 ?    raddr [9] $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 3    waddr [10] $end
$var wire      1 4    waddr [9] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 '    dout [7] $end
$var wire      1 (    dout [6] $end
$var wire      1 )    dout [5] $end
$var wire      1 *    dout [4] $end
$var wire      1 +    dout [3] $end
$var wire      1 ,    dout [2] $end
$var wire      1 -    dout [1] $end
$var wire      1 .    dout [0] $end
$var wire      1 J    b0w  $end
$var wire      1 K    b0r  $end
$var wire      1 L    b1w  $end
$var wire      1 M    b1r  $end
$var wire      1 N    b2w  $end
$var wire      1 O    b2r  $end
$var wire      1 P    b3w  $end
$var wire      1 Q    b3r  $end
$var wire      1 R    Aout [7] $end
$var wire      1 S    Aout [6] $end
$var wire      1 T    Aout [5] $end
$var wire      1 U    Aout [4] $end
$var wire      1 V    Aout [3] $end
$var wire      1 W    Aout [2] $end
$var wire      1 X    Aout [1] $end
$var wire      1 Y    Aout [0] $end
$var wire      1 Z    Bout [7] $end
$var wire      1 [    Bout [6] $end
$var wire      1 \    Bout [5] $end
$var wire      1 ]    Bout [4] $end
$var wire      1 ^    Bout [3] $end
$var wire      1 _    Bout [2] $end
$var wire      1 `    Bout [1] $end
$var wire      1 a    Bout [0] $end
$var wire      1 b    Cout [7] $end
$var wire      1 c    Cout [6] $end
$var wire      1 d    Cout [5] $end
$var wire      1 e    Cout [4] $end
$var wire      1 f    Cout [3] $end
$var wire      1 g    Cout [2] $end
$var wire      1 h    Cout [1] $end
$var wire      1 i    Cout [0] $end
$var wire      1 j    Dout [7] $end
$var wire      1 k    Dout [6] $end
$var wire      1 l    Dout [5] $end
$var wire      1 m    Dout [4] $end
$var wire      1 n    Dout [3] $end
$var wire      1 o    Dout [2] $end
$var wire      1 p    Dout [1] $end
$var wire      1 q    Dout [0] $end

$scope module B0 $end
$var wire      1 0    clk  $end
$var wire      1 K    ren  $end
$var wire      1 J    wen  $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 R    dout [7] $end
$var wire      1 S    dout [6] $end
$var wire      1 T    dout [5] $end
$var wire      1 U    dout [4] $end
$var wire      1 V    dout [3] $end
$var wire      1 W    dout [2] $end
$var wire      1 X    dout [1] $end
$var wire      1 Y    dout [0] $end
$var wire      1 r    aw  $end
$var wire      1 s    bw  $end
$var wire      1 t    cw  $end
$var wire      1 u    dw  $end
$var wire      1 v    ar  $end
$var wire      1 w    br  $end
$var wire      1 x    cr  $end
$var wire      1 y    dr  $end
$var wire      1 z    Aout [7] $end
$var wire      1 {    Aout [6] $end
$var wire      1 |    Aout [5] $end
$var wire      1 }    Aout [4] $end
$var wire      1 ~    Aout [3] $end
$var wire      1 !!   Aout [2] $end
$var wire      1 "!   Aout [1] $end
$var wire      1 #!   Aout [0] $end
$var wire      1 $!   Bout [7] $end
$var wire      1 %!   Bout [6] $end
$var wire      1 &!   Bout [5] $end
$var wire      1 '!   Bout [4] $end
$var wire      1 (!   Bout [3] $end
$var wire      1 )!   Bout [2] $end
$var wire      1 *!   Bout [1] $end
$var wire      1 +!   Bout [0] $end
$var wire      1 ,!   Cout [7] $end
$var wire      1 -!   Cout [6] $end
$var wire      1 .!   Cout [5] $end
$var wire      1 /!   Cout [4] $end
$var wire      1 0!   Cout [3] $end
$var wire      1 1!   Cout [2] $end
$var wire      1 2!   Cout [1] $end
$var wire      1 3!   Cout [0] $end
$var wire      1 4!   Dout [7] $end
$var wire      1 5!   Dout [6] $end
$var wire      1 6!   Dout [5] $end
$var wire      1 7!   Dout [4] $end
$var wire      1 8!   Dout [3] $end
$var wire      1 9!   Dout [2] $end
$var wire      1 :!   Dout [1] $end
$var wire      1 ;!   Dout [0] $end

$scope module M0 $end
$var wire      1 0    clk  $end
$var wire      1 v    ren  $end
$var wire      1 r    wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 <!   dout [7:0] $end
$upscope $end


$scope module M1 $end
$var wire      1 0    clk  $end
$var wire      1 w    ren  $end
$var wire      1 s    wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 =!   dout [7:0] $end
$upscope $end


$scope module M2 $end
$var wire      1 0    clk  $end
$var wire      1 x    ren  $end
$var wire      1 t    wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 >!   dout [7:0] $end
$upscope $end


$scope module M3 $end
$var wire      1 0    clk  $end
$var wire      1 y    ren  $end
$var wire      1 u    wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 ?!   dout [7:0] $end
$upscope $end


$scope module oo $end
$var wire      1 z    a [7] $end
$var wire      1 {    a [6] $end
$var wire      1 |    a [5] $end
$var wire      1 }    a [4] $end
$var wire      1 ~    a [3] $end
$var wire      1 !!   a [2] $end
$var wire      1 "!   a [1] $end
$var wire      1 #!   a [0] $end
$var wire      1 $!   b [7] $end
$var wire      1 %!   b [6] $end
$var wire      1 &!   b [5] $end
$var wire      1 '!   b [4] $end
$var wire      1 (!   b [3] $end
$var wire      1 )!   b [2] $end
$var wire      1 *!   b [1] $end
$var wire      1 +!   b [0] $end
$var wire      1 ,!   c [7] $end
$var wire      1 -!   c [6] $end
$var wire      1 .!   c [5] $end
$var wire      1 /!   c [4] $end
$var wire      1 0!   c [3] $end
$var wire      1 1!   c [2] $end
$var wire      1 2!   c [1] $end
$var wire      1 3!   c [0] $end
$var wire      1 4!   d [7] $end
$var wire      1 5!   d [6] $end
$var wire      1 6!   d [5] $end
$var wire      1 7!   d [4] $end
$var wire      1 8!   d [3] $end
$var wire      1 9!   d [2] $end
$var wire      1 :!   d [1] $end
$var wire      1 ;!   d [0] $end
$var wire      1 R    out [7] $end
$var wire      1 S    out [6] $end
$var wire      1 T    out [5] $end
$var wire      1 U    out [4] $end
$var wire      1 V    out [3] $end
$var wire      1 W    out [2] $end
$var wire      1 X    out [1] $end
$var wire      1 Y    out [0] $end

$scope module o0 $end
$var wire      1 #!   a  $end
$var wire      1 +!   b  $end
$var wire      1 3!   c  $end
$var wire      1 ;!   d  $end
$var wire      1 Y    out  $end
$var wire      1 @!   tmp1  $end
$var wire      1 A!   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 "!   a  $end
$var wire      1 *!   b  $end
$var wire      1 2!   c  $end
$var wire      1 :!   d  $end
$var wire      1 X    out  $end
$var wire      1 B!   tmp1  $end
$var wire      1 C!   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 !!   a  $end
$var wire      1 )!   b  $end
$var wire      1 1!   c  $end
$var wire      1 9!   d  $end
$var wire      1 W    out  $end
$var wire      1 D!   tmp1  $end
$var wire      1 E!   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 ~    a  $end
$var wire      1 (!   b  $end
$var wire      1 0!   c  $end
$var wire      1 8!   d  $end
$var wire      1 V    out  $end
$var wire      1 F!   tmp1  $end
$var wire      1 G!   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 }    a  $end
$var wire      1 '!   b  $end
$var wire      1 /!   c  $end
$var wire      1 7!   d  $end
$var wire      1 U    out  $end
$var wire      1 H!   tmp1  $end
$var wire      1 I!   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 |    a  $end
$var wire      1 &!   b  $end
$var wire      1 .!   c  $end
$var wire      1 6!   d  $end
$var wire      1 T    out  $end
$var wire      1 J!   tmp1  $end
$var wire      1 K!   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 {    a  $end
$var wire      1 %!   b  $end
$var wire      1 -!   c  $end
$var wire      1 5!   d  $end
$var wire      1 S    out  $end
$var wire      1 L!   tmp1  $end
$var wire      1 M!   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 z    a  $end
$var wire      1 $!   b  $end
$var wire      1 ,!   c  $end
$var wire      1 4!   d  $end
$var wire      1 R    out  $end
$var wire      1 N!   tmp1  $end
$var wire      1 O!   tmp2  $end
$upscope $end

$upscope $end

$upscope $end


$scope module B1 $end
$var wire      1 0    clk  $end
$var wire      1 M    ren  $end
$var wire      1 L    wen  $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 Z    dout [7] $end
$var wire      1 [    dout [6] $end
$var wire      1 \    dout [5] $end
$var wire      1 ]    dout [4] $end
$var wire      1 ^    dout [3] $end
$var wire      1 _    dout [2] $end
$var wire      1 `    dout [1] $end
$var wire      1 a    dout [0] $end
$var wire      1 P!   aw  $end
$var wire      1 Q!   bw  $end
$var wire      1 R!   cw  $end
$var wire      1 S!   dw  $end
$var wire      1 T!   ar  $end
$var wire      1 U!   br  $end
$var wire      1 V!   cr  $end
$var wire      1 W!   dr  $end
$var wire      1 X!   Aout [7] $end
$var wire      1 Y!   Aout [6] $end
$var wire      1 Z!   Aout [5] $end
$var wire      1 [!   Aout [4] $end
$var wire      1 \!   Aout [3] $end
$var wire      1 ]!   Aout [2] $end
$var wire      1 ^!   Aout [1] $end
$var wire      1 _!   Aout [0] $end
$var wire      1 `!   Bout [7] $end
$var wire      1 a!   Bout [6] $end
$var wire      1 b!   Bout [5] $end
$var wire      1 c!   Bout [4] $end
$var wire      1 d!   Bout [3] $end
$var wire      1 e!   Bout [2] $end
$var wire      1 f!   Bout [1] $end
$var wire      1 g!   Bout [0] $end
$var wire      1 h!   Cout [7] $end
$var wire      1 i!   Cout [6] $end
$var wire      1 j!   Cout [5] $end
$var wire      1 k!   Cout [4] $end
$var wire      1 l!   Cout [3] $end
$var wire      1 m!   Cout [2] $end
$var wire      1 n!   Cout [1] $end
$var wire      1 o!   Cout [0] $end
$var wire      1 p!   Dout [7] $end
$var wire      1 q!   Dout [6] $end
$var wire      1 r!   Dout [5] $end
$var wire      1 s!   Dout [4] $end
$var wire      1 t!   Dout [3] $end
$var wire      1 u!   Dout [2] $end
$var wire      1 v!   Dout [1] $end
$var wire      1 w!   Dout [0] $end

$scope module M0 $end
$var wire      1 0    clk  $end
$var wire      1 T!   ren  $end
$var wire      1 P!   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 x!   dout [7:0] $end
$upscope $end


$scope module M1 $end
$var wire      1 0    clk  $end
$var wire      1 U!   ren  $end
$var wire      1 Q!   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 y!   dout [7:0] $end
$upscope $end


$scope module M2 $end
$var wire      1 0    clk  $end
$var wire      1 V!   ren  $end
$var wire      1 R!   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 z!   dout [7:0] $end
$upscope $end


$scope module M3 $end
$var wire      1 0    clk  $end
$var wire      1 W!   ren  $end
$var wire      1 S!   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 {!   dout [7:0] $end
$upscope $end


$scope module oo $end
$var wire      1 X!   a [7] $end
$var wire      1 Y!   a [6] $end
$var wire      1 Z!   a [5] $end
$var wire      1 [!   a [4] $end
$var wire      1 \!   a [3] $end
$var wire      1 ]!   a [2] $end
$var wire      1 ^!   a [1] $end
$var wire      1 _!   a [0] $end
$var wire      1 `!   b [7] $end
$var wire      1 a!   b [6] $end
$var wire      1 b!   b [5] $end
$var wire      1 c!   b [4] $end
$var wire      1 d!   b [3] $end
$var wire      1 e!   b [2] $end
$var wire      1 f!   b [1] $end
$var wire      1 g!   b [0] $end
$var wire      1 h!   c [7] $end
$var wire      1 i!   c [6] $end
$var wire      1 j!   c [5] $end
$var wire      1 k!   c [4] $end
$var wire      1 l!   c [3] $end
$var wire      1 m!   c [2] $end
$var wire      1 n!   c [1] $end
$var wire      1 o!   c [0] $end
$var wire      1 p!   d [7] $end
$var wire      1 q!   d [6] $end
$var wire      1 r!   d [5] $end
$var wire      1 s!   d [4] $end
$var wire      1 t!   d [3] $end
$var wire      1 u!   d [2] $end
$var wire      1 v!   d [1] $end
$var wire      1 w!   d [0] $end
$var wire      1 Z    out [7] $end
$var wire      1 [    out [6] $end
$var wire      1 \    out [5] $end
$var wire      1 ]    out [4] $end
$var wire      1 ^    out [3] $end
$var wire      1 _    out [2] $end
$var wire      1 `    out [1] $end
$var wire      1 a    out [0] $end

$scope module o0 $end
$var wire      1 _!   a  $end
$var wire      1 g!   b  $end
$var wire      1 o!   c  $end
$var wire      1 w!   d  $end
$var wire      1 a    out  $end
$var wire      1 |!   tmp1  $end
$var wire      1 }!   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 ^!   a  $end
$var wire      1 f!   b  $end
$var wire      1 n!   c  $end
$var wire      1 v!   d  $end
$var wire      1 `    out  $end
$var wire      1 ~!   tmp1  $end
$var wire      1 !"   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 ]!   a  $end
$var wire      1 e!   b  $end
$var wire      1 m!   c  $end
$var wire      1 u!   d  $end
$var wire      1 _    out  $end
$var wire      1 ""   tmp1  $end
$var wire      1 #"   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 \!   a  $end
$var wire      1 d!   b  $end
$var wire      1 l!   c  $end
$var wire      1 t!   d  $end
$var wire      1 ^    out  $end
$var wire      1 $"   tmp1  $end
$var wire      1 %"   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 [!   a  $end
$var wire      1 c!   b  $end
$var wire      1 k!   c  $end
$var wire      1 s!   d  $end
$var wire      1 ]    out  $end
$var wire      1 &"   tmp1  $end
$var wire      1 '"   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 Z!   a  $end
$var wire      1 b!   b  $end
$var wire      1 j!   c  $end
$var wire      1 r!   d  $end
$var wire      1 \    out  $end
$var wire      1 ("   tmp1  $end
$var wire      1 )"   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 Y!   a  $end
$var wire      1 a!   b  $end
$var wire      1 i!   c  $end
$var wire      1 q!   d  $end
$var wire      1 [    out  $end
$var wire      1 *"   tmp1  $end
$var wire      1 +"   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 X!   a  $end
$var wire      1 `!   b  $end
$var wire      1 h!   c  $end
$var wire      1 p!   d  $end
$var wire      1 Z    out  $end
$var wire      1 ,"   tmp1  $end
$var wire      1 -"   tmp2  $end
$upscope $end

$upscope $end

$upscope $end


$scope module B2 $end
$var wire      1 0    clk  $end
$var wire      1 O    ren  $end
$var wire      1 N    wen  $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 b    dout [7] $end
$var wire      1 c    dout [6] $end
$var wire      1 d    dout [5] $end
$var wire      1 e    dout [4] $end
$var wire      1 f    dout [3] $end
$var wire      1 g    dout [2] $end
$var wire      1 h    dout [1] $end
$var wire      1 i    dout [0] $end
$var wire      1 ."   aw  $end
$var wire      1 /"   bw  $end
$var wire      1 0"   cw  $end
$var wire      1 1"   dw  $end
$var wire      1 2"   ar  $end
$var wire      1 3"   br  $end
$var wire      1 4"   cr  $end
$var wire      1 5"   dr  $end
$var wire      1 6"   Aout [7] $end
$var wire      1 7"   Aout [6] $end
$var wire      1 8"   Aout [5] $end
$var wire      1 9"   Aout [4] $end
$var wire      1 :"   Aout [3] $end
$var wire      1 ;"   Aout [2] $end
$var wire      1 <"   Aout [1] $end
$var wire      1 ="   Aout [0] $end
$var wire      1 >"   Bout [7] $end
$var wire      1 ?"   Bout [6] $end
$var wire      1 @"   Bout [5] $end
$var wire      1 A"   Bout [4] $end
$var wire      1 B"   Bout [3] $end
$var wire      1 C"   Bout [2] $end
$var wire      1 D"   Bout [1] $end
$var wire      1 E"   Bout [0] $end
$var wire      1 F"   Cout [7] $end
$var wire      1 G"   Cout [6] $end
$var wire      1 H"   Cout [5] $end
$var wire      1 I"   Cout [4] $end
$var wire      1 J"   Cout [3] $end
$var wire      1 K"   Cout [2] $end
$var wire      1 L"   Cout [1] $end
$var wire      1 M"   Cout [0] $end
$var wire      1 N"   Dout [7] $end
$var wire      1 O"   Dout [6] $end
$var wire      1 P"   Dout [5] $end
$var wire      1 Q"   Dout [4] $end
$var wire      1 R"   Dout [3] $end
$var wire      1 S"   Dout [2] $end
$var wire      1 T"   Dout [1] $end
$var wire      1 U"   Dout [0] $end

$scope module M0 $end
$var wire      1 0    clk  $end
$var wire      1 2"   ren  $end
$var wire      1 ."   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 V"   dout [7:0] $end
$upscope $end


$scope module M1 $end
$var wire      1 0    clk  $end
$var wire      1 3"   ren  $end
$var wire      1 /"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 W"   dout [7:0] $end
$upscope $end


$scope module M2 $end
$var wire      1 0    clk  $end
$var wire      1 4"   ren  $end
$var wire      1 0"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 X"   dout [7:0] $end
$upscope $end


$scope module M3 $end
$var wire      1 0    clk  $end
$var wire      1 5"   ren  $end
$var wire      1 1"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 Y"   dout [7:0] $end
$upscope $end


$scope module oo $end
$var wire      1 6"   a [7] $end
$var wire      1 7"   a [6] $end
$var wire      1 8"   a [5] $end
$var wire      1 9"   a [4] $end
$var wire      1 :"   a [3] $end
$var wire      1 ;"   a [2] $end
$var wire      1 <"   a [1] $end
$var wire      1 ="   a [0] $end
$var wire      1 >"   b [7] $end
$var wire      1 ?"   b [6] $end
$var wire      1 @"   b [5] $end
$var wire      1 A"   b [4] $end
$var wire      1 B"   b [3] $end
$var wire      1 C"   b [2] $end
$var wire      1 D"   b [1] $end
$var wire      1 E"   b [0] $end
$var wire      1 F"   c [7] $end
$var wire      1 G"   c [6] $end
$var wire      1 H"   c [5] $end
$var wire      1 I"   c [4] $end
$var wire      1 J"   c [3] $end
$var wire      1 K"   c [2] $end
$var wire      1 L"   c [1] $end
$var wire      1 M"   c [0] $end
$var wire      1 N"   d [7] $end
$var wire      1 O"   d [6] $end
$var wire      1 P"   d [5] $end
$var wire      1 Q"   d [4] $end
$var wire      1 R"   d [3] $end
$var wire      1 S"   d [2] $end
$var wire      1 T"   d [1] $end
$var wire      1 U"   d [0] $end
$var wire      1 b    out [7] $end
$var wire      1 c    out [6] $end
$var wire      1 d    out [5] $end
$var wire      1 e    out [4] $end
$var wire      1 f    out [3] $end
$var wire      1 g    out [2] $end
$var wire      1 h    out [1] $end
$var wire      1 i    out [0] $end

$scope module o0 $end
$var wire      1 ="   a  $end
$var wire      1 E"   b  $end
$var wire      1 M"   c  $end
$var wire      1 U"   d  $end
$var wire      1 i    out  $end
$var wire      1 Z"   tmp1  $end
$var wire      1 ["   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 <"   a  $end
$var wire      1 D"   b  $end
$var wire      1 L"   c  $end
$var wire      1 T"   d  $end
$var wire      1 h    out  $end
$var wire      1 \"   tmp1  $end
$var wire      1 ]"   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 ;"   a  $end
$var wire      1 C"   b  $end
$var wire      1 K"   c  $end
$var wire      1 S"   d  $end
$var wire      1 g    out  $end
$var wire      1 ^"   tmp1  $end
$var wire      1 _"   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 :"   a  $end
$var wire      1 B"   b  $end
$var wire      1 J"   c  $end
$var wire      1 R"   d  $end
$var wire      1 f    out  $end
$var wire      1 `"   tmp1  $end
$var wire      1 a"   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 9"   a  $end
$var wire      1 A"   b  $end
$var wire      1 I"   c  $end
$var wire      1 Q"   d  $end
$var wire      1 e    out  $end
$var wire      1 b"   tmp1  $end
$var wire      1 c"   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 8"   a  $end
$var wire      1 @"   b  $end
$var wire      1 H"   c  $end
$var wire      1 P"   d  $end
$var wire      1 d    out  $end
$var wire      1 d"   tmp1  $end
$var wire      1 e"   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 7"   a  $end
$var wire      1 ?"   b  $end
$var wire      1 G"   c  $end
$var wire      1 O"   d  $end
$var wire      1 c    out  $end
$var wire      1 f"   tmp1  $end
$var wire      1 g"   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 6"   a  $end
$var wire      1 >"   b  $end
$var wire      1 F"   c  $end
$var wire      1 N"   d  $end
$var wire      1 b    out  $end
$var wire      1 h"   tmp1  $end
$var wire      1 i"   tmp2  $end
$upscope $end

$upscope $end

$upscope $end


$scope module B3 $end
$var wire      1 0    clk  $end
$var wire      1 Q    ren  $end
$var wire      1 P    wen  $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 j    dout [7] $end
$var wire      1 k    dout [6] $end
$var wire      1 l    dout [5] $end
$var wire      1 m    dout [4] $end
$var wire      1 n    dout [3] $end
$var wire      1 o    dout [2] $end
$var wire      1 p    dout [1] $end
$var wire      1 q    dout [0] $end
$var wire      1 j"   aw  $end
$var wire      1 k"   bw  $end
$var wire      1 l"   cw  $end
$var wire      1 m"   dw  $end
$var wire      1 n"   ar  $end
$var wire      1 o"   br  $end
$var wire      1 p"   cr  $end
$var wire      1 q"   dr  $end
$var wire      1 r"   Aout [7] $end
$var wire      1 s"   Aout [6] $end
$var wire      1 t"   Aout [5] $end
$var wire      1 u"   Aout [4] $end
$var wire      1 v"   Aout [3] $end
$var wire      1 w"   Aout [2] $end
$var wire      1 x"   Aout [1] $end
$var wire      1 y"   Aout [0] $end
$var wire      1 z"   Bout [7] $end
$var wire      1 {"   Bout [6] $end
$var wire      1 |"   Bout [5] $end
$var wire      1 }"   Bout [4] $end
$var wire      1 ~"   Bout [3] $end
$var wire      1 !#   Bout [2] $end
$var wire      1 "#   Bout [1] $end
$var wire      1 ##   Bout [0] $end
$var wire      1 $#   Cout [7] $end
$var wire      1 %#   Cout [6] $end
$var wire      1 &#   Cout [5] $end
$var wire      1 '#   Cout [4] $end
$var wire      1 (#   Cout [3] $end
$var wire      1 )#   Cout [2] $end
$var wire      1 *#   Cout [1] $end
$var wire      1 +#   Cout [0] $end
$var wire      1 ,#   Dout [7] $end
$var wire      1 -#   Dout [6] $end
$var wire      1 .#   Dout [5] $end
$var wire      1 /#   Dout [4] $end
$var wire      1 0#   Dout [3] $end
$var wire      1 1#   Dout [2] $end
$var wire      1 2#   Dout [1] $end
$var wire      1 3#   Dout [0] $end

$scope module M0 $end
$var wire      1 0    clk  $end
$var wire      1 n"   ren  $end
$var wire      1 j"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 4#   dout [7:0] $end
$upscope $end


$scope module M1 $end
$var wire      1 0    clk  $end
$var wire      1 o"   ren  $end
$var wire      1 k"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 5#   dout [7:0] $end
$upscope $end


$scope module M2 $end
$var wire      1 0    clk  $end
$var wire      1 p"   ren  $end
$var wire      1 l"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 6#   dout [7:0] $end
$upscope $end


$scope module M3 $end
$var wire      1 0    clk  $end
$var wire      1 q"   ren  $end
$var wire      1 m"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 7#   dout [7:0] $end
$upscope $end


$scope module oo $end
$var wire      1 r"   a [7] $end
$var wire      1 s"   a [6] $end
$var wire      1 t"   a [5] $end
$var wire      1 u"   a [4] $end
$var wire      1 v"   a [3] $end
$var wire      1 w"   a [2] $end
$var wire      1 x"   a [1] $end
$var wire      1 y"   a [0] $end
$var wire      1 z"   b [7] $end
$var wire      1 {"   b [6] $end
$var wire      1 |"   b [5] $end
$var wire      1 }"   b [4] $end
$var wire      1 ~"   b [3] $end
$var wire      1 !#   b [2] $end
$var wire      1 "#   b [1] $end
$var wire      1 ##   b [0] $end
$var wire      1 $#   c [7] $end
$var wire      1 %#   c [6] $end
$var wire      1 &#   c [5] $end
$var wire      1 '#   c [4] $end
$var wire      1 (#   c [3] $end
$var wire      1 )#   c [2] $end
$var wire      1 *#   c [1] $end
$var wire      1 +#   c [0] $end
$var wire      1 ,#   d [7] $end
$var wire      1 -#   d [6] $end
$var wire      1 .#   d [5] $end
$var wire      1 /#   d [4] $end
$var wire      1 0#   d [3] $end
$var wire      1 1#   d [2] $end
$var wire      1 2#   d [1] $end
$var wire      1 3#   d [0] $end
$var wire      1 j    out [7] $end
$var wire      1 k    out [6] $end
$var wire      1 l    out [5] $end
$var wire      1 m    out [4] $end
$var wire      1 n    out [3] $end
$var wire      1 o    out [2] $end
$var wire      1 p    out [1] $end
$var wire      1 q    out [0] $end

$scope module o0 $end
$var wire      1 y"   a  $end
$var wire      1 ##   b  $end
$var wire      1 +#   c  $end
$var wire      1 3#   d  $end
$var wire      1 q    out  $end
$var wire      1 8#   tmp1  $end
$var wire      1 9#   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 x"   a  $end
$var wire      1 "#   b  $end
$var wire      1 *#   c  $end
$var wire      1 2#   d  $end
$var wire      1 p    out  $end
$var wire      1 :#   tmp1  $end
$var wire      1 ;#   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 w"   a  $end
$var wire      1 !#   b  $end
$var wire      1 )#   c  $end
$var wire      1 1#   d  $end
$var wire      1 o    out  $end
$var wire      1 <#   tmp1  $end
$var wire      1 =#   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 v"   a  $end
$var wire      1 ~"   b  $end
$var wire      1 (#   c  $end
$var wire      1 0#   d  $end
$var wire      1 n    out  $end
$var wire      1 >#   tmp1  $end
$var wire      1 ?#   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 u"   a  $end
$var wire      1 }"   b  $end
$var wire      1 '#   c  $end
$var wire      1 /#   d  $end
$var wire      1 m    out  $end
$var wire      1 @#   tmp1  $end
$var wire      1 A#   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 t"   a  $end
$var wire      1 |"   b  $end
$var wire      1 &#   c  $end
$var wire      1 .#   d  $end
$var wire      1 l    out  $end
$var wire      1 B#   tmp1  $end
$var wire      1 C#   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 s"   a  $end
$var wire      1 {"   b  $end
$var wire      1 %#   c  $end
$var wire      1 -#   d  $end
$var wire      1 k    out  $end
$var wire      1 D#   tmp1  $end
$var wire      1 E#   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 r"   a  $end
$var wire      1 z"   b  $end
$var wire      1 $#   c  $end
$var wire      1 ,#   d  $end
$var wire      1 j    out  $end
$var wire      1 F#   tmp1  $end
$var wire      1 G#   tmp2  $end
$upscope $end

$upscope $end

$upscope $end


$scope module OO $end
$var wire      1 R    a [7] $end
$var wire      1 S    a [6] $end
$var wire      1 T    a [5] $end
$var wire      1 U    a [4] $end
$var wire      1 V    a [3] $end
$var wire      1 W    a [2] $end
$var wire      1 X    a [1] $end
$var wire      1 Y    a [0] $end
$var wire      1 Z    b [7] $end
$var wire      1 [    b [6] $end
$var wire      1 \    b [5] $end
$var wire      1 ]    b [4] $end
$var wire      1 ^    b [3] $end
$var wire      1 _    b [2] $end
$var wire      1 `    b [1] $end
$var wire      1 a    b [0] $end
$var wire      1 b    c [7] $end
$var wire      1 c    c [6] $end
$var wire      1 d    c [5] $end
$var wire      1 e    c [4] $end
$var wire      1 f    c [3] $end
$var wire      1 g    c [2] $end
$var wire      1 h    c [1] $end
$var wire      1 i    c [0] $end
$var wire      1 j    d [7] $end
$var wire      1 k    d [6] $end
$var wire      1 l    d [5] $end
$var wire      1 m    d [4] $end
$var wire      1 n    d [3] $end
$var wire      1 o    d [2] $end
$var wire      1 p    d [1] $end
$var wire      1 q    d [0] $end
$var wire      1 '    out [7] $end
$var wire      1 (    out [6] $end
$var wire      1 )    out [5] $end
$var wire      1 *    out [4] $end
$var wire      1 +    out [3] $end
$var wire      1 ,    out [2] $end
$var wire      1 -    out [1] $end
$var wire      1 .    out [0] $end

$scope module o0 $end
$var wire      1 Y    a  $end
$var wire      1 a    b  $end
$var wire      1 i    c  $end
$var wire      1 q    d  $end
$var wire      1 .    out  $end
$var wire      1 H#   tmp1  $end
$var wire      1 I#   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 X    a  $end
$var wire      1 `    b  $end
$var wire      1 h    c  $end
$var wire      1 p    d  $end
$var wire      1 -    out  $end
$var wire      1 J#   tmp1  $end
$var wire      1 K#   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 W    a  $end
$var wire      1 _    b  $end
$var wire      1 g    c  $end
$var wire      1 o    d  $end
$var wire      1 ,    out  $end
$var wire      1 L#   tmp1  $end
$var wire      1 M#   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 V    a  $end
$var wire      1 ^    b  $end
$var wire      1 f    c  $end
$var wire      1 n    d  $end
$var wire      1 +    out  $end
$var wire      1 N#   tmp1  $end
$var wire      1 O#   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 U    a  $end
$var wire      1 ]    b  $end
$var wire      1 e    c  $end
$var wire      1 m    d  $end
$var wire      1 *    out  $end
$var wire      1 P#   tmp1  $end
$var wire      1 Q#   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 T    a  $end
$var wire      1 \    b  $end
$var wire      1 d    c  $end
$var wire      1 l    d  $end
$var wire      1 )    out  $end
$var wire      1 R#   tmp1  $end
$var wire      1 S#   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 S    a  $end
$var wire      1 [    b  $end
$var wire      1 c    c  $end
$var wire      1 k    d  $end
$var wire      1 (    out  $end
$var wire      1 T#   tmp1  $end
$var wire      1 U#   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 R    a  $end
$var wire      1 Z    b  $end
$var wire      1 b    c  $end
$var wire      1 j    d  $end
$var wire      1 '    out  $end
$var wire      1 V#   tmp1  $end
$var wire      1 W#   tmp2  $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b1010 /
0!
0"
0#
b0 $
b0 %
b0 &
0'
0(
0)
0*
0+
0,
0-
0.
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
b0 I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
b0 <!
b0 =!
b0 >!
b0 ?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
b0 x!
b0 y!
b0 z!
b0 {!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
b0 V"
b0 W"
b0 X"
b0 Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
b0 4#
b0 5#
b0 6#
b0 7#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
$end
#5000
1!
10
#10000
0!
1#
b1010100 $
b101010100 %
b101010 &
b101010 I
1@
1B
1D
1F
17
19
1;
12
00
1J
1r
#15000
1!
10
#20000
0!
1"
b1101010100 $
b1010100 %
b11 &
b11 I
0@
14
15
11
00
1K
1t
0r
1L
0J
0t
1R!
1v
#25000
1!
10
b101010 <!
1|
1~
1"!
1B!
1X
1F!
1V
1J!
1T
1R#
1)
1N#
1+
1J#
1-
#30000
0!
0"
b10101010100 $
b0 %
b10001 &
b10001 I
0B
0D
0F
13
04
01
00
0K
1N
0L
0R!
10"
0v
#35000
1!
10
b0 <!
0|
0~
0"!
0B!
0X
0F!
0V
0J!
0T
0R#
0)
0N#
0+
0J#
0-
#40000
0!
1"
b0 $
b1101010100 %
b0 &
b0 I
1?
1@
1B
1D
1F
03
05
07
09
0;
11
00
00"
1."
0N
1J
1M
1V!
1r
0."
#45000
1!
10
b11 z!
1n!
1o!
1}!
1a
1!"
1`
1J#
1-
1H#
1.
#50000
0!
0"
b1010100 $
b101010100 %
b101010 &
b101010 I
0?
17
19
1;
01
00
0M
0V!
#55000
1!
10
b0 z!
0n!
0o!
0}!
0a
0!"
0`
0J#
0-
0H#
0.
#60000
0!
1"
b1101010100 $
b1010100 %
b11 &
b11 I
0@
14
15
11
00
1K
1t
0r
1L
0J
0t
1R!
1v
#65000
1!
10
b101010 <!
1|
1~
1"!
1B!
1X
1F!
1V
1J!
1T
1R#
1)
1N#
1+
1J#
1-
#70000
0!
0"
b10101010100 $
b0 %
b10001 &
b10001 I
0B
0D
0F
13
04
01
00
0K
1N
0L
0R!
10"
0v
#75000
1!
10
b0 <!
0|
0~
0"!
0B!
0X
0F!
0V
0J!
0T
0R#
0)
0N#
0+
0J#
0-
#80000
0!
1"
b0 $
b10101010100 %
b0 &
b0 I
1>
1@
1B
1D
1F
03
05
07
09
0;
11
00
00"
1."
0N
1J
1O
14"
1r
0."
#85000
1!
10
b10001 X"
1I"
1M"
1["
1i
1c"
1e
1Q#
1*
1I#
1.
#90000
0!
b11111010100 $
b0 %
b111111 &
b111111 I
0>
0@
0B
0D
0F
13
14
15
16
17
19
1;
00
1u
0r
1P
0J
04"
12"
0O
1K
1v
02"
0u
1m"
#95000
1!
10
b0 X"
0I"
0M"
0["
0i
0c"
0e
0Q#
0*
0I#
0.
#100000
0!
0#
b0 $
b11111010100 %
b0 &
b0 I
1>
1?
1@
1A
1B
1D
1F
03
04
05
06
07
09
0;
02
00
0m"
1j"
0P
1y
0v
1Q
0K
0y
1q"
0j"
#105000
1!
10
b111111 7#
1.#
1/#
10#
11#
12#
13#
19#
1q
1;#
1p
1=#
1o
1?#
1n
1A#
1m
1C#
1l
1S#
1)
1Q#
1*
1O#
1+
1M#
1,
1K#
1-
1I#
1.
#110000
0!
