$date
    Oct  6, 2022  15:56:38
$end
$version
    TOOL:	ncsim	15.20-s039
$end
$timescale
    1 ps
$end

$scope module Majority_t $end
$var reg       1 !    a  $end
$var reg       1 "    b  $end
$var reg       1 #    c  $end
$var wire      1 $    out  $end

$scope module major $end
$var wire      1 %    a  $end
$var wire      1 %    b  $end
$var wire      1 &    c  $end
$var wire      1 $    out  $end
$var wire      1 '    w1  $end
$var wire      1 (    w2  $end
$var wire      1 )    w3  $end
$var wire      1 *    w4  $end
$var wire      1 +    w5  $end

$scope module g0 $end
$var wire      1 %    a  $end
$var wire      1 %    b  $end
$var wire      1 '    out  $end
$var wire      1 ,    w1  $end

$scope module g0 $end
$var wire      1 ,    a  $end
$var wire      1 '    out  $end
$upscope $end

$upscope $end


$scope module g1 $end
$var wire      1 %    a  $end
$var wire      1 &    b  $end
$var wire      1 (    out  $end
$var wire      1 -    w1  $end

$scope module g0 $end
$var wire      1 -    a  $end
$var wire      1 (    out  $end
$upscope $end

$upscope $end


$scope module g2 $end
$var wire      1 %    a  $end
$var wire      1 &    b  $end
$var wire      1 )    out  $end
$var wire      1 .    w1  $end

$scope module g0 $end
$var wire      1 .    a  $end
$var wire      1 )    out  $end
$upscope $end

$upscope $end


$scope module g3 $end
$var wire      1 '    a  $end
$var wire      1 (    b  $end
$var wire      1 *    out  $end
$var wire      1 /    w1  $end
$var wire      1 0    w2  $end

$scope module g0 $end
$var wire      1 '    a  $end
$var wire      1 /    out  $end
$upscope $end


$scope module g1 $end
$var wire      1 (    a  $end
$var wire      1 0    out  $end
$upscope $end

$upscope $end


$scope module g4 $end
$var wire      1 *    a  $end
$var wire      1 )    b  $end
$var wire      1 $    out  $end
$var wire      1 1    w1  $end
$var wire      1 2    w2  $end

$scope module g0 $end
$var wire      1 *    a  $end
$var wire      1 1    out  $end
$upscope $end


$scope module g1 $end
$var wire      1 )    a  $end
$var wire      1 2    out  $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end


$scope module MUX_2x1 $end
$var wire      1 +    a  $end
$var wire      1 +    b  $end
$var wire      1 +    sel  $end
$var wire      1 3    out  $end
$var wire      1 4    w1  $end
$var wire      1 5    w2  $end
$var wire      1 6    nsel  $end

$scope module g0 $end
$var wire      1 +    a  $end
$var wire      1 6    out  $end
$upscope $end


$scope module g1 $end
$var wire      1 +    a  $end
$var wire      1 6    b  $end
$var wire      1 4    out  $end
$var wire      1 7    w1  $end

$scope module g0 $end
$var wire      1 7    a  $end
$var wire      1 4    out  $end
$upscope $end

$upscope $end


$scope module g2 $end
$var wire      1 +    a  $end
$var wire      1 +    b  $end
$var wire      1 5    out  $end
$var wire      1 6    w1  $end

$scope module g0 $end
$var wire      1 6    a  $end
$var wire      1 5    out  $end
$upscope $end

$upscope $end


$scope module g3 $end
$var wire      1 4    a  $end
$var wire      1 5    b  $end
$var wire      1 3    out  $end
$var wire      1 8    w1  $end
$var wire      1 9    w2  $end

$scope module g0 $end
$var wire      1 4    a  $end
$var wire      1 8    out  $end
$upscope $end


$scope module g1 $end
$var wire      1 5    a  $end
$var wire      1 9    out  $end
$upscope $end

$upscope $end

$upscope $end


$scope module myXnor $end
$var wire      1 +    a  $end
$var wire      1 +    b  $end
$var wire      1 :    out  $end
$var wire      1 ;    w1  $end

$scope module g0 $end
$var wire      1 +    a  $end
$var wire      1 +    b  $end
$var wire      1 ;    out  $end
$var wire      1 6    na  $end
$var wire      1 6    nb  $end
$var wire      1 4    w1  $end
$var wire      1 <    w2  $end

$scope module g0 $end
$var wire      1 +    a  $end
$var wire      1 6    out  $end
$upscope $end


$scope module g1 $end
$var wire      1 +    a  $end
$var wire      1 6    out  $end
$upscope $end


$scope module g2 $end
$var wire      1 +    a  $end
$var wire      1 6    b  $end
$var wire      1 4    out  $end
$var wire      1 7    w1  $end

$scope module g0 $end
$var wire      1 7    a  $end
$var wire      1 4    out  $end
$upscope $end

$upscope $end


$scope module g3 $end
$var wire      1 6    a  $end
$var wire      1 +    b  $end
$var wire      1 <    out  $end
$var wire      1 =    w1  $end

$scope module g0 $end
$var wire      1 =    a  $end
$var wire      1 <    out  $end
$upscope $end

$upscope $end


$scope module g4 $end
$var wire      1 4    a  $end
$var wire      1 <    b  $end
$var wire      1 ;    out  $end
$var wire      1 8    w1  $end
$var wire      1 >    w2  $end

$scope module g0 $end
$var wire      1 4    a  $end
$var wire      1 8    out  $end
$upscope $end


$scope module g1 $end
$var wire      1 <    a  $end
$var wire      1 >    out  $end
$upscope $end

$upscope $end

$upscope $end


$scope module g1 $end
$var wire      1 ;    a  $end
$var wire      1 :    out  $end
$upscope $end

$upscope $end


$scope module myNor $end
$var wire      1 +    a  $end
$var wire      1 +    b  $end
$var wire      1 9    out  $end
$var wire      1 5    w1  $end

$scope module g0 $end
$var wire      1 +    a  $end
$var wire      1 +    b  $end
$var wire      1 5    out  $end
$var wire      1 6    w1  $end
$var wire      1 6    w2  $end

$scope module g0 $end
$var wire      1 +    a  $end
$var wire      1 6    out  $end
$upscope $end


$scope module g1 $end
$var wire      1 +    a  $end
$var wire      1 6    out  $end
$upscope $end

$upscope $end


$scope module g1 $end
$var wire      1 5    a  $end
$var wire      1 9    out  $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
z+
1,
1-
1.
1/
10
11
12
x3
x4
x5
x6
x7
x8
x9
x:
x;
x<
x=
x>
$end
#1000
1#
1&
#2000
0#
1"
0&
#3000
1#
1&
#4000
0#
0"
1!
1%
0&
0,
1'
0/
1*
01
1$
#5000
1#
1&
0.
0-
1(
1)
02
00
#6000
0#
1"
0&
1.
1-
0(
0)
12
10
#7000
1#
1&
0.
0-
1(
1)
02
00
#8000
0#
0"
0!
0%
0&
1.
1-
1,
0'
0(
0)
12
10
1/
0*
11
0$
#9000
