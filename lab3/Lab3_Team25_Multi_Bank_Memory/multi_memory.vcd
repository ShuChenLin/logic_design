$date
    Oct 15, 2022  17:48:04
$end
$version
    TOOL:	ncsim	15.20-s039
$end
$timescale
    1 ps
$end

$scope module Multi_Bank_Memory_t $end
$var reg       1 !    clk  $end
$var reg       1 "    ren  $end
$var reg       1 #    wen  $end
$var reg      11 $    waddr [10:0] $end
$var reg      11 %    raddr [10:0] $end
$var reg       8 &    din [7:0] $end
$var wire      1 '    dout [7] $end
$var wire      1 (    dout [6] $end
$var wire      1 )    dout [5] $end
$var wire      1 *    dout [4] $end
$var wire      1 +    dout [3] $end
$var wire      1 ,    dout [2] $end
$var wire      1 -    dout [1] $end
$var wire      1 .    dout [0] $end
$var parameter 32 /    cyc  $end

$scope module hello $end
$var wire      1 0    clk  $end
$var wire      1 1    ren  $end
$var wire      1 2    wen  $end
$var wire      1 3    waddr [10] $end
$var wire      1 4    waddr [9] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 >    raddr [10] $end
$var wire      1 ?    raddr [9] $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 '    dout [7] $end
$var wire      1 (    dout [6] $end
$var wire      1 )    dout [5] $end
$var wire      1 *    dout [4] $end
$var wire      1 +    dout [3] $end
$var wire      1 ,    dout [2] $end
$var wire      1 -    dout [1] $end
$var wire      1 .    dout [0] $end

$scope module BB $end
$var wire      1 0    clk  $end
$var wire      1 1    ren  $end
$var wire      1 2    wen  $end
$var wire      1 >    raddr [10] $end
$var wire      1 ?    raddr [9] $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 3    waddr [10] $end
$var wire      1 4    waddr [9] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 '    dout [7] $end
$var wire      1 (    dout [6] $end
$var wire      1 )    dout [5] $end
$var wire      1 *    dout [4] $end
$var wire      1 +    dout [3] $end
$var wire      1 ,    dout [2] $end
$var wire      1 -    dout [1] $end
$var wire      1 .    dout [0] $end
$var reg       1 J    b0w  $end
$var reg       1 K    b0r  $end
$var reg       1 L    b1w  $end
$var reg       1 M    b1r  $end
$var reg       1 N    b2w  $end
$var reg       1 O    b2r  $end
$var reg       1 P    b3w  $end
$var reg       1 Q    b3r  $end
$var wire      1 R    Aout [7] $end
$var wire      1 S    Aout [6] $end
$var wire      1 T    Aout [5] $end
$var wire      1 U    Aout [4] $end
$var wire      1 V    Aout [3] $end
$var wire      1 W    Aout [2] $end
$var wire      1 X    Aout [1] $end
$var wire      1 Y    Aout [0] $end
$var wire      1 Z    Bout [7] $end
$var wire      1 [    Bout [6] $end
$var wire      1 \    Bout [5] $end
$var wire      1 ]    Bout [4] $end
$var wire      1 ^    Bout [3] $end
$var wire      1 _    Bout [2] $end
$var wire      1 `    Bout [1] $end
$var wire      1 a    Bout [0] $end
$var wire      1 b    Cout [7] $end
$var wire      1 c    Cout [6] $end
$var wire      1 d    Cout [5] $end
$var wire      1 e    Cout [4] $end
$var wire      1 f    Cout [3] $end
$var wire      1 g    Cout [2] $end
$var wire      1 h    Cout [1] $end
$var wire      1 i    Cout [0] $end
$var wire      1 j    Dout [7] $end
$var wire      1 k    Dout [6] $end
$var wire      1 l    Dout [5] $end
$var wire      1 m    Dout [4] $end
$var wire      1 n    Dout [3] $end
$var wire      1 o    Dout [2] $end
$var wire      1 p    Dout [1] $end
$var wire      1 q    Dout [0] $end

$scope module B0 $end
$var wire      1 0    clk  $end
$var wire      1 r    ren  $end
$var wire      1 s    wen  $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 R    dout [7] $end
$var wire      1 S    dout [6] $end
$var wire      1 T    dout [5] $end
$var wire      1 U    dout [4] $end
$var wire      1 V    dout [3] $end
$var wire      1 W    dout [2] $end
$var wire      1 X    dout [1] $end
$var wire      1 Y    dout [0] $end
$var reg       1 t    aw  $end
$var reg       1 u    bw  $end
$var reg       1 v    cw  $end
$var reg       1 w    dw  $end
$var reg       1 x    ar  $end
$var reg       1 y    br  $end
$var reg       1 z    cr  $end
$var reg       1 {    dr  $end
$var wire      1 |    Aout [7] $end
$var wire      1 }    Aout [6] $end
$var wire      1 ~    Aout [5] $end
$var wire      1 !!   Aout [4] $end
$var wire      1 "!   Aout [3] $end
$var wire      1 #!   Aout [2] $end
$var wire      1 $!   Aout [1] $end
$var wire      1 %!   Aout [0] $end
$var wire      1 &!   Bout [7] $end
$var wire      1 '!   Bout [6] $end
$var wire      1 (!   Bout [5] $end
$var wire      1 )!   Bout [4] $end
$var wire      1 *!   Bout [3] $end
$var wire      1 +!   Bout [2] $end
$var wire      1 ,!   Bout [1] $end
$var wire      1 -!   Bout [0] $end
$var wire      1 .!   Cout [7] $end
$var wire      1 /!   Cout [6] $end
$var wire      1 0!   Cout [5] $end
$var wire      1 1!   Cout [4] $end
$var wire      1 2!   Cout [3] $end
$var wire      1 3!   Cout [2] $end
$var wire      1 4!   Cout [1] $end
$var wire      1 5!   Cout [0] $end
$var wire      1 6!   Dout [7] $end
$var wire      1 7!   Dout [6] $end
$var wire      1 8!   Dout [5] $end
$var wire      1 9!   Dout [4] $end
$var wire      1 :!   Dout [3] $end
$var wire      1 ;!   Dout [2] $end
$var wire      1 <!   Dout [1] $end
$var wire      1 =!   Dout [0] $end

$scope module M0 $end
$var wire      1 0    clk  $end
$var wire      1 >!   ren  $end
$var wire      1 ?!   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 @!   dout [7:0] $end
$upscope $end


$scope module M1 $end
$var wire      1 0    clk  $end
$var wire      1 A!   ren  $end
$var wire      1 B!   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 C!   dout [7:0] $end
$upscope $end


$scope module M2 $end
$var wire      1 0    clk  $end
$var wire      1 D!   ren  $end
$var wire      1 E!   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 F!   dout [7:0] $end
$upscope $end


$scope module M3 $end
$var wire      1 0    clk  $end
$var wire      1 G!   ren  $end
$var wire      1 H!   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 I!   dout [7:0] $end
$upscope $end


$scope module oo $end
$var wire      1 |    a [7] $end
$var wire      1 }    a [6] $end
$var wire      1 ~    a [5] $end
$var wire      1 !!   a [4] $end
$var wire      1 "!   a [3] $end
$var wire      1 #!   a [2] $end
$var wire      1 $!   a [1] $end
$var wire      1 %!   a [0] $end
$var wire      1 &!   b [7] $end
$var wire      1 '!   b [6] $end
$var wire      1 (!   b [5] $end
$var wire      1 )!   b [4] $end
$var wire      1 *!   b [3] $end
$var wire      1 +!   b [2] $end
$var wire      1 ,!   b [1] $end
$var wire      1 -!   b [0] $end
$var wire      1 .!   c [7] $end
$var wire      1 /!   c [6] $end
$var wire      1 0!   c [5] $end
$var wire      1 1!   c [4] $end
$var wire      1 2!   c [3] $end
$var wire      1 3!   c [2] $end
$var wire      1 4!   c [1] $end
$var wire      1 5!   c [0] $end
$var wire      1 6!   d [7] $end
$var wire      1 7!   d [6] $end
$var wire      1 8!   d [5] $end
$var wire      1 9!   d [4] $end
$var wire      1 :!   d [3] $end
$var wire      1 ;!   d [2] $end
$var wire      1 <!   d [1] $end
$var wire      1 =!   d [0] $end
$var wire      1 R    out [7] $end
$var wire      1 S    out [6] $end
$var wire      1 T    out [5] $end
$var wire      1 U    out [4] $end
$var wire      1 V    out [3] $end
$var wire      1 W    out [2] $end
$var wire      1 X    out [1] $end
$var wire      1 Y    out [0] $end

$scope module o0 $end
$var wire      1 %!   a  $end
$var wire      1 -!   b  $end
$var wire      1 5!   c  $end
$var wire      1 =!   d  $end
$var wire      1 Y    out  $end
$var wire      1 J!   tmp1  $end
$var wire      1 K!   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 $!   a  $end
$var wire      1 ,!   b  $end
$var wire      1 4!   c  $end
$var wire      1 <!   d  $end
$var wire      1 X    out  $end
$var wire      1 L!   tmp1  $end
$var wire      1 M!   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 #!   a  $end
$var wire      1 +!   b  $end
$var wire      1 3!   c  $end
$var wire      1 ;!   d  $end
$var wire      1 W    out  $end
$var wire      1 N!   tmp1  $end
$var wire      1 O!   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 "!   a  $end
$var wire      1 *!   b  $end
$var wire      1 2!   c  $end
$var wire      1 :!   d  $end
$var wire      1 V    out  $end
$var wire      1 P!   tmp1  $end
$var wire      1 Q!   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 !!   a  $end
$var wire      1 )!   b  $end
$var wire      1 1!   c  $end
$var wire      1 9!   d  $end
$var wire      1 U    out  $end
$var wire      1 R!   tmp1  $end
$var wire      1 S!   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 ~    a  $end
$var wire      1 (!   b  $end
$var wire      1 0!   c  $end
$var wire      1 8!   d  $end
$var wire      1 T    out  $end
$var wire      1 T!   tmp1  $end
$var wire      1 U!   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 }    a  $end
$var wire      1 '!   b  $end
$var wire      1 /!   c  $end
$var wire      1 7!   d  $end
$var wire      1 S    out  $end
$var wire      1 V!   tmp1  $end
$var wire      1 W!   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 |    a  $end
$var wire      1 &!   b  $end
$var wire      1 .!   c  $end
$var wire      1 6!   d  $end
$var wire      1 R    out  $end
$var wire      1 X!   tmp1  $end
$var wire      1 Y!   tmp2  $end
$upscope $end

$upscope $end

$upscope $end


$scope module B1 $end
$var wire      1 0    clk  $end
$var wire      1 Z!   ren  $end
$var wire      1 [!   wen  $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 Z    dout [7] $end
$var wire      1 [    dout [6] $end
$var wire      1 \    dout [5] $end
$var wire      1 ]    dout [4] $end
$var wire      1 ^    dout [3] $end
$var wire      1 _    dout [2] $end
$var wire      1 `    dout [1] $end
$var wire      1 a    dout [0] $end
$var reg       1 \!   aw  $end
$var reg       1 ]!   bw  $end
$var reg       1 ^!   cw  $end
$var reg       1 _!   dw  $end
$var reg       1 `!   ar  $end
$var reg       1 a!   br  $end
$var reg       1 b!   cr  $end
$var reg       1 c!   dr  $end
$var wire      1 d!   Aout [7] $end
$var wire      1 e!   Aout [6] $end
$var wire      1 f!   Aout [5] $end
$var wire      1 g!   Aout [4] $end
$var wire      1 h!   Aout [3] $end
$var wire      1 i!   Aout [2] $end
$var wire      1 j!   Aout [1] $end
$var wire      1 k!   Aout [0] $end
$var wire      1 l!   Bout [7] $end
$var wire      1 m!   Bout [6] $end
$var wire      1 n!   Bout [5] $end
$var wire      1 o!   Bout [4] $end
$var wire      1 p!   Bout [3] $end
$var wire      1 q!   Bout [2] $end
$var wire      1 r!   Bout [1] $end
$var wire      1 s!   Bout [0] $end
$var wire      1 t!   Cout [7] $end
$var wire      1 u!   Cout [6] $end
$var wire      1 v!   Cout [5] $end
$var wire      1 w!   Cout [4] $end
$var wire      1 x!   Cout [3] $end
$var wire      1 y!   Cout [2] $end
$var wire      1 z!   Cout [1] $end
$var wire      1 {!   Cout [0] $end
$var wire      1 |!   Dout [7] $end
$var wire      1 }!   Dout [6] $end
$var wire      1 ~!   Dout [5] $end
$var wire      1 !"   Dout [4] $end
$var wire      1 ""   Dout [3] $end
$var wire      1 #"   Dout [2] $end
$var wire      1 $"   Dout [1] $end
$var wire      1 %"   Dout [0] $end

$scope module M0 $end
$var wire      1 0    clk  $end
$var wire      1 &"   ren  $end
$var wire      1 '"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 ("   dout [7:0] $end
$upscope $end


$scope module M1 $end
$var wire      1 0    clk  $end
$var wire      1 )"   ren  $end
$var wire      1 *"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 +"   dout [7:0] $end
$upscope $end


$scope module M2 $end
$var wire      1 0    clk  $end
$var wire      1 ,"   ren  $end
$var wire      1 -"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 ."   dout [7:0] $end
$upscope $end


$scope module M3 $end
$var wire      1 0    clk  $end
$var wire      1 /"   ren  $end
$var wire      1 0"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 1"   dout [7:0] $end
$upscope $end


$scope module oo $end
$var wire      1 d!   a [7] $end
$var wire      1 e!   a [6] $end
$var wire      1 f!   a [5] $end
$var wire      1 g!   a [4] $end
$var wire      1 h!   a [3] $end
$var wire      1 i!   a [2] $end
$var wire      1 j!   a [1] $end
$var wire      1 k!   a [0] $end
$var wire      1 l!   b [7] $end
$var wire      1 m!   b [6] $end
$var wire      1 n!   b [5] $end
$var wire      1 o!   b [4] $end
$var wire      1 p!   b [3] $end
$var wire      1 q!   b [2] $end
$var wire      1 r!   b [1] $end
$var wire      1 s!   b [0] $end
$var wire      1 t!   c [7] $end
$var wire      1 u!   c [6] $end
$var wire      1 v!   c [5] $end
$var wire      1 w!   c [4] $end
$var wire      1 x!   c [3] $end
$var wire      1 y!   c [2] $end
$var wire      1 z!   c [1] $end
$var wire      1 {!   c [0] $end
$var wire      1 |!   d [7] $end
$var wire      1 }!   d [6] $end
$var wire      1 ~!   d [5] $end
$var wire      1 !"   d [4] $end
$var wire      1 ""   d [3] $end
$var wire      1 #"   d [2] $end
$var wire      1 $"   d [1] $end
$var wire      1 %"   d [0] $end
$var wire      1 Z    out [7] $end
$var wire      1 [    out [6] $end
$var wire      1 \    out [5] $end
$var wire      1 ]    out [4] $end
$var wire      1 ^    out [3] $end
$var wire      1 _    out [2] $end
$var wire      1 `    out [1] $end
$var wire      1 a    out [0] $end

$scope module o0 $end
$var wire      1 k!   a  $end
$var wire      1 s!   b  $end
$var wire      1 {!   c  $end
$var wire      1 %"   d  $end
$var wire      1 a    out  $end
$var wire      1 2"   tmp1  $end
$var wire      1 3"   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 j!   a  $end
$var wire      1 r!   b  $end
$var wire      1 z!   c  $end
$var wire      1 $"   d  $end
$var wire      1 `    out  $end
$var wire      1 4"   tmp1  $end
$var wire      1 5"   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 i!   a  $end
$var wire      1 q!   b  $end
$var wire      1 y!   c  $end
$var wire      1 #"   d  $end
$var wire      1 _    out  $end
$var wire      1 6"   tmp1  $end
$var wire      1 7"   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 h!   a  $end
$var wire      1 p!   b  $end
$var wire      1 x!   c  $end
$var wire      1 ""   d  $end
$var wire      1 ^    out  $end
$var wire      1 8"   tmp1  $end
$var wire      1 9"   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 g!   a  $end
$var wire      1 o!   b  $end
$var wire      1 w!   c  $end
$var wire      1 !"   d  $end
$var wire      1 ]    out  $end
$var wire      1 :"   tmp1  $end
$var wire      1 ;"   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 f!   a  $end
$var wire      1 n!   b  $end
$var wire      1 v!   c  $end
$var wire      1 ~!   d  $end
$var wire      1 \    out  $end
$var wire      1 <"   tmp1  $end
$var wire      1 ="   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 e!   a  $end
$var wire      1 m!   b  $end
$var wire      1 u!   c  $end
$var wire      1 }!   d  $end
$var wire      1 [    out  $end
$var wire      1 >"   tmp1  $end
$var wire      1 ?"   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 d!   a  $end
$var wire      1 l!   b  $end
$var wire      1 t!   c  $end
$var wire      1 |!   d  $end
$var wire      1 Z    out  $end
$var wire      1 @"   tmp1  $end
$var wire      1 A"   tmp2  $end
$upscope $end

$upscope $end

$upscope $end


$scope module B2 $end
$var wire      1 0    clk  $end
$var wire      1 B"   ren  $end
$var wire      1 C"   wen  $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 b    dout [7] $end
$var wire      1 c    dout [6] $end
$var wire      1 d    dout [5] $end
$var wire      1 e    dout [4] $end
$var wire      1 f    dout [3] $end
$var wire      1 g    dout [2] $end
$var wire      1 h    dout [1] $end
$var wire      1 i    dout [0] $end
$var reg       1 D"   aw  $end
$var reg       1 E"   bw  $end
$var reg       1 F"   cw  $end
$var reg       1 G"   dw  $end
$var reg       1 H"   ar  $end
$var reg       1 I"   br  $end
$var reg       1 J"   cr  $end
$var reg       1 K"   dr  $end
$var wire      1 L"   Aout [7] $end
$var wire      1 M"   Aout [6] $end
$var wire      1 N"   Aout [5] $end
$var wire      1 O"   Aout [4] $end
$var wire      1 P"   Aout [3] $end
$var wire      1 Q"   Aout [2] $end
$var wire      1 R"   Aout [1] $end
$var wire      1 S"   Aout [0] $end
$var wire      1 T"   Bout [7] $end
$var wire      1 U"   Bout [6] $end
$var wire      1 V"   Bout [5] $end
$var wire      1 W"   Bout [4] $end
$var wire      1 X"   Bout [3] $end
$var wire      1 Y"   Bout [2] $end
$var wire      1 Z"   Bout [1] $end
$var wire      1 ["   Bout [0] $end
$var wire      1 \"   Cout [7] $end
$var wire      1 ]"   Cout [6] $end
$var wire      1 ^"   Cout [5] $end
$var wire      1 _"   Cout [4] $end
$var wire      1 `"   Cout [3] $end
$var wire      1 a"   Cout [2] $end
$var wire      1 b"   Cout [1] $end
$var wire      1 c"   Cout [0] $end
$var wire      1 d"   Dout [7] $end
$var wire      1 e"   Dout [6] $end
$var wire      1 f"   Dout [5] $end
$var wire      1 g"   Dout [4] $end
$var wire      1 h"   Dout [3] $end
$var wire      1 i"   Dout [2] $end
$var wire      1 j"   Dout [1] $end
$var wire      1 k"   Dout [0] $end

$scope module M0 $end
$var wire      1 0    clk  $end
$var wire      1 l"   ren  $end
$var wire      1 m"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 n"   dout [7:0] $end
$upscope $end


$scope module M1 $end
$var wire      1 0    clk  $end
$var wire      1 o"   ren  $end
$var wire      1 p"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 q"   dout [7:0] $end
$upscope $end


$scope module M2 $end
$var wire      1 0    clk  $end
$var wire      1 r"   ren  $end
$var wire      1 s"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 t"   dout [7:0] $end
$upscope $end


$scope module M3 $end
$var wire      1 0    clk  $end
$var wire      1 u"   ren  $end
$var wire      1 v"   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 w"   dout [7:0] $end
$upscope $end


$scope module oo $end
$var wire      1 L"   a [7] $end
$var wire      1 M"   a [6] $end
$var wire      1 N"   a [5] $end
$var wire      1 O"   a [4] $end
$var wire      1 P"   a [3] $end
$var wire      1 Q"   a [2] $end
$var wire      1 R"   a [1] $end
$var wire      1 S"   a [0] $end
$var wire      1 T"   b [7] $end
$var wire      1 U"   b [6] $end
$var wire      1 V"   b [5] $end
$var wire      1 W"   b [4] $end
$var wire      1 X"   b [3] $end
$var wire      1 Y"   b [2] $end
$var wire      1 Z"   b [1] $end
$var wire      1 ["   b [0] $end
$var wire      1 \"   c [7] $end
$var wire      1 ]"   c [6] $end
$var wire      1 ^"   c [5] $end
$var wire      1 _"   c [4] $end
$var wire      1 `"   c [3] $end
$var wire      1 a"   c [2] $end
$var wire      1 b"   c [1] $end
$var wire      1 c"   c [0] $end
$var wire      1 d"   d [7] $end
$var wire      1 e"   d [6] $end
$var wire      1 f"   d [5] $end
$var wire      1 g"   d [4] $end
$var wire      1 h"   d [3] $end
$var wire      1 i"   d [2] $end
$var wire      1 j"   d [1] $end
$var wire      1 k"   d [0] $end
$var wire      1 b    out [7] $end
$var wire      1 c    out [6] $end
$var wire      1 d    out [5] $end
$var wire      1 e    out [4] $end
$var wire      1 f    out [3] $end
$var wire      1 g    out [2] $end
$var wire      1 h    out [1] $end
$var wire      1 i    out [0] $end

$scope module o0 $end
$var wire      1 S"   a  $end
$var wire      1 ["   b  $end
$var wire      1 c"   c  $end
$var wire      1 k"   d  $end
$var wire      1 i    out  $end
$var wire      1 x"   tmp1  $end
$var wire      1 y"   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 R"   a  $end
$var wire      1 Z"   b  $end
$var wire      1 b"   c  $end
$var wire      1 j"   d  $end
$var wire      1 h    out  $end
$var wire      1 z"   tmp1  $end
$var wire      1 {"   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 Q"   a  $end
$var wire      1 Y"   b  $end
$var wire      1 a"   c  $end
$var wire      1 i"   d  $end
$var wire      1 g    out  $end
$var wire      1 |"   tmp1  $end
$var wire      1 }"   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 P"   a  $end
$var wire      1 X"   b  $end
$var wire      1 `"   c  $end
$var wire      1 h"   d  $end
$var wire      1 f    out  $end
$var wire      1 ~"   tmp1  $end
$var wire      1 !#   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 O"   a  $end
$var wire      1 W"   b  $end
$var wire      1 _"   c  $end
$var wire      1 g"   d  $end
$var wire      1 e    out  $end
$var wire      1 "#   tmp1  $end
$var wire      1 ##   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 N"   a  $end
$var wire      1 V"   b  $end
$var wire      1 ^"   c  $end
$var wire      1 f"   d  $end
$var wire      1 d    out  $end
$var wire      1 $#   tmp1  $end
$var wire      1 %#   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 M"   a  $end
$var wire      1 U"   b  $end
$var wire      1 ]"   c  $end
$var wire      1 e"   d  $end
$var wire      1 c    out  $end
$var wire      1 &#   tmp1  $end
$var wire      1 '#   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 L"   a  $end
$var wire      1 T"   b  $end
$var wire      1 \"   c  $end
$var wire      1 d"   d  $end
$var wire      1 b    out  $end
$var wire      1 (#   tmp1  $end
$var wire      1 )#   tmp2  $end
$upscope $end

$upscope $end

$upscope $end


$scope module B3 $end
$var wire      1 0    clk  $end
$var wire      1 *#   ren  $end
$var wire      1 +#   wen  $end
$var wire      1 @    raddr [8] $end
$var wire      1 A    raddr [7] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      1 5    waddr [8] $end
$var wire      1 6    waddr [7] $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      8 I    din [7:0] $end
$var wire      1 j    dout [7] $end
$var wire      1 k    dout [6] $end
$var wire      1 l    dout [5] $end
$var wire      1 m    dout [4] $end
$var wire      1 n    dout [3] $end
$var wire      1 o    dout [2] $end
$var wire      1 p    dout [1] $end
$var wire      1 q    dout [0] $end
$var reg       1 ,#   aw  $end
$var reg       1 -#   bw  $end
$var reg       1 .#   cw  $end
$var reg       1 /#   dw  $end
$var reg       1 0#   ar  $end
$var reg       1 1#   br  $end
$var reg       1 2#   cr  $end
$var reg       1 3#   dr  $end
$var wire      1 4#   Aout [7] $end
$var wire      1 5#   Aout [6] $end
$var wire      1 6#   Aout [5] $end
$var wire      1 7#   Aout [4] $end
$var wire      1 8#   Aout [3] $end
$var wire      1 9#   Aout [2] $end
$var wire      1 :#   Aout [1] $end
$var wire      1 ;#   Aout [0] $end
$var wire      1 <#   Bout [7] $end
$var wire      1 =#   Bout [6] $end
$var wire      1 >#   Bout [5] $end
$var wire      1 ?#   Bout [4] $end
$var wire      1 @#   Bout [3] $end
$var wire      1 A#   Bout [2] $end
$var wire      1 B#   Bout [1] $end
$var wire      1 C#   Bout [0] $end
$var wire      1 D#   Cout [7] $end
$var wire      1 E#   Cout [6] $end
$var wire      1 F#   Cout [5] $end
$var wire      1 G#   Cout [4] $end
$var wire      1 H#   Cout [3] $end
$var wire      1 I#   Cout [2] $end
$var wire      1 J#   Cout [1] $end
$var wire      1 K#   Cout [0] $end
$var wire      1 L#   Dout [7] $end
$var wire      1 M#   Dout [6] $end
$var wire      1 N#   Dout [5] $end
$var wire      1 O#   Dout [4] $end
$var wire      1 P#   Dout [3] $end
$var wire      1 Q#   Dout [2] $end
$var wire      1 R#   Dout [1] $end
$var wire      1 S#   Dout [0] $end

$scope module M0 $end
$var wire      1 0    clk  $end
$var wire      1 T#   ren  $end
$var wire      1 U#   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 V#   dout [7:0] $end
$upscope $end


$scope module M1 $end
$var wire      1 0    clk  $end
$var wire      1 W#   ren  $end
$var wire      1 X#   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 Y#   dout [7:0] $end
$upscope $end


$scope module M2 $end
$var wire      1 0    clk  $end
$var wire      1 Z#   ren  $end
$var wire      1 [#   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 \#   dout [7:0] $end
$upscope $end


$scope module M3 $end
$var wire      1 0    clk  $end
$var wire      1 ]#   ren  $end
$var wire      1 ^#   wen  $end
$var wire      1 7    waddr [6] $end
$var wire      1 8    waddr [5] $end
$var wire      1 9    waddr [4] $end
$var wire      1 :    waddr [3] $end
$var wire      1 ;    waddr [2] $end
$var wire      1 <    waddr [1] $end
$var wire      1 =    waddr [0] $end
$var wire      1 B    raddr [6] $end
$var wire      1 C    raddr [5] $end
$var wire      1 D    raddr [4] $end
$var wire      1 E    raddr [3] $end
$var wire      1 F    raddr [2] $end
$var wire      1 G    raddr [1] $end
$var wire      1 H    raddr [0] $end
$var wire      8 I    din [7:0] $end
$var reg       8 _#   dout [7:0] $end
$upscope $end


$scope module oo $end
$var wire      1 4#   a [7] $end
$var wire      1 5#   a [6] $end
$var wire      1 6#   a [5] $end
$var wire      1 7#   a [4] $end
$var wire      1 8#   a [3] $end
$var wire      1 9#   a [2] $end
$var wire      1 :#   a [1] $end
$var wire      1 ;#   a [0] $end
$var wire      1 <#   b [7] $end
$var wire      1 =#   b [6] $end
$var wire      1 >#   b [5] $end
$var wire      1 ?#   b [4] $end
$var wire      1 @#   b [3] $end
$var wire      1 A#   b [2] $end
$var wire      1 B#   b [1] $end
$var wire      1 C#   b [0] $end
$var wire      1 D#   c [7] $end
$var wire      1 E#   c [6] $end
$var wire      1 F#   c [5] $end
$var wire      1 G#   c [4] $end
$var wire      1 H#   c [3] $end
$var wire      1 I#   c [2] $end
$var wire      1 J#   c [1] $end
$var wire      1 K#   c [0] $end
$var wire      1 L#   d [7] $end
$var wire      1 M#   d [6] $end
$var wire      1 N#   d [5] $end
$var wire      1 O#   d [4] $end
$var wire      1 P#   d [3] $end
$var wire      1 Q#   d [2] $end
$var wire      1 R#   d [1] $end
$var wire      1 S#   d [0] $end
$var wire      1 j    out [7] $end
$var wire      1 k    out [6] $end
$var wire      1 l    out [5] $end
$var wire      1 m    out [4] $end
$var wire      1 n    out [3] $end
$var wire      1 o    out [2] $end
$var wire      1 p    out [1] $end
$var wire      1 q    out [0] $end

$scope module o0 $end
$var wire      1 ;#   a  $end
$var wire      1 C#   b  $end
$var wire      1 K#   c  $end
$var wire      1 S#   d  $end
$var wire      1 q    out  $end
$var wire      1 `#   tmp1  $end
$var wire      1 a#   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 :#   a  $end
$var wire      1 B#   b  $end
$var wire      1 J#   c  $end
$var wire      1 R#   d  $end
$var wire      1 p    out  $end
$var wire      1 b#   tmp1  $end
$var wire      1 c#   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 9#   a  $end
$var wire      1 A#   b  $end
$var wire      1 I#   c  $end
$var wire      1 Q#   d  $end
$var wire      1 o    out  $end
$var wire      1 d#   tmp1  $end
$var wire      1 e#   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 8#   a  $end
$var wire      1 @#   b  $end
$var wire      1 H#   c  $end
$var wire      1 P#   d  $end
$var wire      1 n    out  $end
$var wire      1 f#   tmp1  $end
$var wire      1 g#   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 7#   a  $end
$var wire      1 ?#   b  $end
$var wire      1 G#   c  $end
$var wire      1 O#   d  $end
$var wire      1 m    out  $end
$var wire      1 h#   tmp1  $end
$var wire      1 i#   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 6#   a  $end
$var wire      1 >#   b  $end
$var wire      1 F#   c  $end
$var wire      1 N#   d  $end
$var wire      1 l    out  $end
$var wire      1 j#   tmp1  $end
$var wire      1 k#   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 5#   a  $end
$var wire      1 =#   b  $end
$var wire      1 E#   c  $end
$var wire      1 M#   d  $end
$var wire      1 k    out  $end
$var wire      1 l#   tmp1  $end
$var wire      1 m#   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 4#   a  $end
$var wire      1 <#   b  $end
$var wire      1 D#   c  $end
$var wire      1 L#   d  $end
$var wire      1 j    out  $end
$var wire      1 n#   tmp1  $end
$var wire      1 o#   tmp2  $end
$upscope $end

$upscope $end

$upscope $end


$scope module OO $end
$var wire      1 R    a [7] $end
$var wire      1 S    a [6] $end
$var wire      1 T    a [5] $end
$var wire      1 U    a [4] $end
$var wire      1 V    a [3] $end
$var wire      1 W    a [2] $end
$var wire      1 X    a [1] $end
$var wire      1 Y    a [0] $end
$var wire      1 Z    b [7] $end
$var wire      1 [    b [6] $end
$var wire      1 \    b [5] $end
$var wire      1 ]    b [4] $end
$var wire      1 ^    b [3] $end
$var wire      1 _    b [2] $end
$var wire      1 `    b [1] $end
$var wire      1 a    b [0] $end
$var wire      1 b    c [7] $end
$var wire      1 c    c [6] $end
$var wire      1 d    c [5] $end
$var wire      1 e    c [4] $end
$var wire      1 f    c [3] $end
$var wire      1 g    c [2] $end
$var wire      1 h    c [1] $end
$var wire      1 i    c [0] $end
$var wire      1 j    d [7] $end
$var wire      1 k    d [6] $end
$var wire      1 l    d [5] $end
$var wire      1 m    d [4] $end
$var wire      1 n    d [3] $end
$var wire      1 o    d [2] $end
$var wire      1 p    d [1] $end
$var wire      1 q    d [0] $end
$var wire      1 '    out [7] $end
$var wire      1 (    out [6] $end
$var wire      1 )    out [5] $end
$var wire      1 *    out [4] $end
$var wire      1 +    out [3] $end
$var wire      1 ,    out [2] $end
$var wire      1 -    out [1] $end
$var wire      1 .    out [0] $end

$scope module o0 $end
$var wire      1 Y    a  $end
$var wire      1 a    b  $end
$var wire      1 i    c  $end
$var wire      1 q    d  $end
$var wire      1 .    out  $end
$var wire      1 p#   tmp1  $end
$var wire      1 q#   tmp2  $end
$upscope $end


$scope module o1 $end
$var wire      1 X    a  $end
$var wire      1 `    b  $end
$var wire      1 h    c  $end
$var wire      1 p    d  $end
$var wire      1 -    out  $end
$var wire      1 r#   tmp1  $end
$var wire      1 s#   tmp2  $end
$upscope $end


$scope module o2 $end
$var wire      1 W    a  $end
$var wire      1 _    b  $end
$var wire      1 g    c  $end
$var wire      1 o    d  $end
$var wire      1 ,    out  $end
$var wire      1 t#   tmp1  $end
$var wire      1 u#   tmp2  $end
$upscope $end


$scope module o3 $end
$var wire      1 V    a  $end
$var wire      1 ^    b  $end
$var wire      1 f    c  $end
$var wire      1 n    d  $end
$var wire      1 +    out  $end
$var wire      1 v#   tmp1  $end
$var wire      1 w#   tmp2  $end
$upscope $end


$scope module o4 $end
$var wire      1 U    a  $end
$var wire      1 ]    b  $end
$var wire      1 e    c  $end
$var wire      1 m    d  $end
$var wire      1 *    out  $end
$var wire      1 x#   tmp1  $end
$var wire      1 y#   tmp2  $end
$upscope $end


$scope module o5 $end
$var wire      1 T    a  $end
$var wire      1 \    b  $end
$var wire      1 d    c  $end
$var wire      1 l    d  $end
$var wire      1 )    out  $end
$var wire      1 z#   tmp1  $end
$var wire      1 {#   tmp2  $end
$upscope $end


$scope module o6 $end
$var wire      1 S    a  $end
$var wire      1 [    b  $end
$var wire      1 c    c  $end
$var wire      1 k    d  $end
$var wire      1 (    out  $end
$var wire      1 |#   tmp1  $end
$var wire      1 }#   tmp2  $end
$upscope $end


$scope module o7 $end
$var wire      1 R    a  $end
$var wire      1 Z    b  $end
$var wire      1 b    c  $end
$var wire      1 j    d  $end
$var wire      1 '    out  $end
$var wire      1 ~#   tmp1  $end
$var wire      1 !$   tmp2  $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b1010 /
0!
0"
0#
b0 $
b0 %
b0 &
0'
0(
0)
0*
0+
0,
0-
0.
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
b0 I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
b0 @!
0A!
0B!
b0 C!
0D!
0E!
b0 F!
0G!
0H!
b0 I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
b0 ("
0)"
0*"
b0 +"
0,"
0-"
b0 ."
0/"
00"
b0 1"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
b0 n"
0o"
0p"
b0 q"
0r"
0s"
b0 t"
0u"
0v"
b0 w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
b0 V#
0W#
0X#
b0 Y#
0Z#
0[#
b0 \#
0]#
0^#
b0 _#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
0!$
$end
#5000
1!
10
#10000
0!
1#
b1010100 $
b101010100 %
b101010 &
b101010 I
1@
1B
1D
1F
17
19
1;
12
00
1J
1s
1t
1?!
#15000
1!
10
#20000
0!
1"
b1101010100 $
b1010100 %
b11 &
b11 I
0@
14
15
11
00
1K
0J
1L
0t
1v
1E!
0?!
1[!
0s
1r
1^!
0v
1x
1>!
0E!
1-"
#25000
1!
10
b101010 @!
1~
1"!
1$!
1L!
1X
1P!
1V
1T!
1T
1z#
1)
1v#
1+
1r#
1-
#30000
0!
0"
b10101010100 $
b0 %
b10001 &
b10001 I
0B
0D
0F
13
04
01
00
0K
0L
1N
1C"
0[!
0r
1F"
0^!
0x
0>!
0-"
1s"
#35000
1!
10
b0 @!
0~
0"!
0$!
0L!
0X
0P!
0V
0T!
0T
0z#
0)
0v#
0+
0r#
0-
#40000
0!
1"
b0 $
b1101010100 %
b0 &
b0 I
1?
1@
1B
1D
1F
03
05
07
09
0;
11
00
1M
1J
0N
1D"
0F"
0s"
1m"
0C"
1s
1Z!
0D"
1t
1b!
1,"
1?!
0m"
#45000
1!
10
b11 ."
1z!
1{!
13"
1a
15"
1`
1r#
1-
1p#
1.
#50000
0!
0"
b1010100 $
b101010100 %
b101010 &
b101010 I
0?
17
19
1;
01
00
0M
0Z!
0b!
0,"
#55000
1!
10
b0 ."
0z!
0{!
03"
0a
05"
0`
0r#
0-
0p#
0.
#60000
0!
1"
b1101010100 $
b1010100 %
b11 &
b11 I
0@
14
15
11
00
1K
0J
1L
0t
1v
1E!
0?!
1[!
0s
1r
1^!
0v
1x
1>!
0E!
1-"
#65000
1!
10
b101010 @!
1~
1"!
1$!
1L!
1X
1P!
1V
1T!
1T
1z#
1)
1v#
1+
1r#
1-
#70000
0!
0"
b10101010100 $
b0 %
b10001 &
b10001 I
0B
0D
0F
13
04
01
00
0K
0L
1N
1C"
0[!
0r
1F"
0^!
0x
0>!
0-"
1s"
#75000
1!
10
b0 @!
0~
0"!
0$!
0L!
0X
0P!
0V
0T!
0T
0z#
0)
0v#
0+
0r#
0-
#80000
0!
1"
b0 $
b10101010100 %
b0 &
b0 I
1>
1@
1B
1D
1F
03
05
07
09
0;
11
00
1O
1J
0N
1D"
0F"
0s"
1m"
0C"
1s
1B"
0D"
1t
1J"
1r"
1?!
0m"
#85000
1!
10
b10001 t"
1_"
1c"
1y"
1i
1##
1e
1y#
1*
1q#
1.
#90000
0!
b11111010100 $
b0 %
b111111 &
b111111 I
0>
0@
0B
0D
0F
13
14
15
16
17
19
1;
00
1K
0O
1H"
0J"
0J
1P
0t
1w
1H!
0?!
1+#
0s
0r"
1l"
0B"
1r
1/#
0w
0H"
1x
1>!
0l"
0H!
1^#
#95000
1!
10
b0 t"
0_"
0c"
0y"
0i
0##
0e
0y#
0*
0q#
0.
#100000
0!
0#
b0 $
b11111010100 %
b0 &
b0 I
1>
1?
1@
1A
1B
1D
1F
03
04
05
06
07
09
0;
02
00
0K
1Q
0x
1{
0P
1,#
0/#
0^#
1U#
0+#
1G!
0>!
1*#
0r
0,#
13#
0{
0G!
1]#
0U#
#105000
1!
10
b111111 _#
1N#
1O#
1P#
1Q#
1R#
1S#
1a#
1q
1c#
1p
1e#
1o
1g#
1n
1i#
1m
1k#
1l
1{#
1)
1y#
1*
1w#
1+
1u#
1,
1s#
1-
1q#
1.
#110000
0!
