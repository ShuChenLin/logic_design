$date
    Sep 25, 2022  16:57:48
$end
$version
    TOOL:	ncsim	15.20-s039
$end
$timescale
    1 ps
$end

$scope module Dmux_1x4_4bit_t $end
$var reg       4 !    in [3:0] $end
$var reg       2 "    sel [1:0] $end
$var wire      1 #    a [3] $end
$var wire      1 $    a [2] $end
$var wire      1 %    a [1] $end
$var wire      1 &    a [0] $end
$var wire      1 '    b [3] $end
$var wire      1 (    b [2] $end
$var wire      1 )    b [1] $end
$var wire      1 *    b [0] $end
$var wire      1 +    c [3] $end
$var wire      1 ,    c [2] $end
$var wire      1 -    c [1] $end
$var wire      1 .    c [0] $end
$var wire      1 /    d [3] $end
$var wire      1 0    d [2] $end
$var wire      1 1    d [1] $end
$var wire      1 2    d [0] $end

$scope module m1 $end
$var wire      1 3    in [3] $end
$var wire      1 4    in [2] $end
$var wire      1 5    in [1] $end
$var wire      1 6    in [0] $end
$var wire      1 7    sel [1] $end
$var wire      1 8    sel [0] $end
$var wire      1 #    a [3] $end
$var wire      1 $    a [2] $end
$var wire      1 %    a [1] $end
$var wire      1 &    a [0] $end
$var wire      1 '    b [3] $end
$var wire      1 (    b [2] $end
$var wire      1 )    b [1] $end
$var wire      1 *    b [0] $end
$var wire      1 +    c [3] $end
$var wire      1 ,    c [2] $end
$var wire      1 -    c [1] $end
$var wire      1 .    c [0] $end
$var wire      1 /    d [3] $end
$var wire      1 0    d [2] $end
$var wire      1 1    d [1] $end
$var wire      1 2    d [0] $end
$var wire      1 9    t1 [3] $end
$var wire      1 :    t1 [2] $end
$var wire      1 ;    t1 [1] $end
$var wire      1 <    t1 [0] $end
$var wire      1 =    t2 [3] $end
$var wire      1 >    t2 [2] $end
$var wire      1 ?    t2 [1] $end
$var wire      1 @    t2 [0] $end

$scope module tmp_3 $end
$var wire      1 3    d [3] $end
$var wire      1 4    d [2] $end
$var wire      1 5    d [1] $end
$var wire      1 6    d [0] $end
$var wire      1 7    sel  $end
$var wire      1 9    y1 [3] $end
$var wire      1 :    y1 [2] $end
$var wire      1 ;    y1 [1] $end
$var wire      1 <    y1 [0] $end
$var wire      1 =    y2 [3] $end
$var wire      1 >    y2 [2] $end
$var wire      1 ?    y2 [1] $end
$var wire      1 @    y2 [0] $end
$var wire      1 A    seln  $end

$scope module tmp_1 $end
$var wire      1 3    a [3] $end
$var wire      1 4    a [2] $end
$var wire      1 5    a [1] $end
$var wire      1 6    a [0] $end
$var wire      1 A    b  $end
$var wire      1 9    f [3] $end
$var wire      1 :    f [2] $end
$var wire      1 ;    f [1] $end
$var wire      1 <    f [0] $end
$upscope $end


$scope module tmp_2 $end
$var wire      1 3    a [3] $end
$var wire      1 4    a [2] $end
$var wire      1 5    a [1] $end
$var wire      1 6    a [0] $end
$var wire      1 7    b  $end
$var wire      1 =    f [3] $end
$var wire      1 >    f [2] $end
$var wire      1 ?    f [1] $end
$var wire      1 @    f [0] $end
$upscope $end

$upscope $end


$scope module tmp_4 $end
$var wire      1 9    d [3] $end
$var wire      1 :    d [2] $end
$var wire      1 ;    d [1] $end
$var wire      1 <    d [0] $end
$var wire      1 8    sel  $end
$var wire      1 #    y1 [3] $end
$var wire      1 $    y1 [2] $end
$var wire      1 %    y1 [1] $end
$var wire      1 &    y1 [0] $end
$var wire      1 '    y2 [3] $end
$var wire      1 (    y2 [2] $end
$var wire      1 )    y2 [1] $end
$var wire      1 *    y2 [0] $end
$var wire      1 B    seln  $end

$scope module tmp_1 $end
$var wire      1 9    a [3] $end
$var wire      1 :    a [2] $end
$var wire      1 ;    a [1] $end
$var wire      1 <    a [0] $end
$var wire      1 B    b  $end
$var wire      1 #    f [3] $end
$var wire      1 $    f [2] $end
$var wire      1 %    f [1] $end
$var wire      1 &    f [0] $end
$upscope $end


$scope module tmp_2 $end
$var wire      1 9    a [3] $end
$var wire      1 :    a [2] $end
$var wire      1 ;    a [1] $end
$var wire      1 <    a [0] $end
$var wire      1 8    b  $end
$var wire      1 '    f [3] $end
$var wire      1 (    f [2] $end
$var wire      1 )    f [1] $end
$var wire      1 *    f [0] $end
$upscope $end

$upscope $end


$scope module tmp_5 $end
$var wire      1 =    d [3] $end
$var wire      1 >    d [2] $end
$var wire      1 ?    d [1] $end
$var wire      1 @    d [0] $end
$var wire      1 8    sel  $end
$var wire      1 +    y1 [3] $end
$var wire      1 ,    y1 [2] $end
$var wire      1 -    y1 [1] $end
$var wire      1 .    y1 [0] $end
$var wire      1 /    y2 [3] $end
$var wire      1 0    y2 [2] $end
$var wire      1 1    y2 [1] $end
$var wire      1 2    y2 [0] $end
$var wire      1 B    seln  $end

$scope module tmp_1 $end
$var wire      1 =    a [3] $end
$var wire      1 >    a [2] $end
$var wire      1 ?    a [1] $end
$var wire      1 @    a [0] $end
$var wire      1 B    b  $end
$var wire      1 +    f [3] $end
$var wire      1 ,    f [2] $end
$var wire      1 -    f [1] $end
$var wire      1 .    f [0] $end
$upscope $end


$scope module tmp_2 $end
$var wire      1 =    a [3] $end
$var wire      1 >    a [2] $end
$var wire      1 ?    a [1] $end
$var wire      1 @    a [0] $end
$var wire      1 8    b  $end
$var wire      1 /    f [3] $end
$var wire      1 0    f [2] $end
$var wire      1 1    f [1] $end
$var wire      1 2    f [0] $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b1 !
b0 "
0#
0$
0%
1&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
16
07
08
09
0:
0;
1<
0=
0>
0?
0@
1A
1B
$end
#1000
b1 "
b10 !
15
06
18
0B
0*
0<
1;
1)
0&
#2000
b10 "
b11 !
16
17
08
1B
0)
0A
1?
1@
1.
1-
0;
#3000
b11 "
b100 !
14
05
06
18
0B
01
02
0@
0?
1>
10
0-
0.
#4000
b0 "
b101 !
16
07
08
1B
00
1A
0>
1:
1<
1&
1$
#5000
b1 "
b110 !
15
06
18
0B
1(
0*
0<
1;
1)
0$
0&
#6000
b10 "
b111 !
16
17
08
1B
0(
0)
0A
1>
1?
1@
1.
1-
1,
0:
0;
#7000
b11 "
b1000 !
13
04
05
06
18
0B
00
01
02
0@
0?
0>
1=
1/
0,
0-
0.
#8000
b0 "
b1001 !
16
07
08
1B
0/
1A
0=
19
1<
1&
1#
#9000
