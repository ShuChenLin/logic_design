$date
    Oct 14, 2022  18:17:41
$end
$version
    TOOL:	ncsim	15.20-s039
$end
$timescale
    1 ps
$end

$scope module Round_Robin_FIFO_Arbiter_t $end
$var reg       1 !    clk  $end
$var reg       1 "    rst_n  $end
$var reg       4 #    wen [3:0] $end
$var reg       8 $    a [7:0] $end
$var reg       8 %    b [7:0] $end
$var reg       8 &    c [7:0] $end
$var reg       8 '    d [7:0] $end
$var wire      8 (    dout [7:0] $end
$var wire      1 )    valid  $end
$var wire      8 *    not_found [7:0] $end
$var parameter 32 +    cyc  $end

$scope module rrfa $end
$var wire      1 ,    clk  $end
$var wire      1 -    rst_n  $end
$var wire      1 .    wen [3] $end
$var wire      1 /    wen [2] $end
$var wire      1 0    wen [1] $end
$var wire      1 1    wen [0] $end
$var wire      8 2    a [7:0] $end
$var wire      8 3    b [7:0] $end
$var wire      8 4    c [7:0] $end
$var wire      8 5    d [7:0] $end
$var reg       8 6    dout [7:0] $end
$var reg       1 7    valid  $end
$var wire      1 8    era  $end
$var wire      1 9    erb  $end
$var wire      1 :    erc  $end
$var wire      1 ;    erd  $end
$var wire      2 <    next_counter [1:0] $end
$var wire      8 =    Aout [7:0] $end
$var wire      8 >    Bout [7:0] $end
$var wire      8 ?    Cout [7:0] $end
$var wire      8 @    Dout [7:0] $end
$var reg       1 A    ra  $end
$var reg       1 B    rb  $end
$var reg       1 C    rc  $end
$var reg       1 D    rd  $end
$var reg       3 E    counter [2:0] $end

$scope module fa $end
$var wire      1 ,    clk  $end
$var wire      1 -    rst_n  $end
$var wire      1 1    wen  $end
$var wire      1 F    ren  $end
$var wire      8 2    din [7:0] $end
$var reg       8 G    dout [7:0] $end
$var reg       1 H    error  $end
$var reg       4 I    head [3:0] $end
$var reg       4 J    tail [3:0] $end
$var reg       4 K    next_head [3:0] $end
$var reg       4 L    next_tail [3:0] $end
$var reg       8 M    do_car [7:0] $end
$upscope $end


$scope module fb $end
$var wire      1 ,    clk  $end
$var wire      1 -    rst_n  $end
$var wire      1 0    wen  $end
$var wire      1 N    ren  $end
$var wire      8 3    din [7:0] $end
$var reg       8 O    dout [7:0] $end
$var reg       1 P    error  $end
$var reg       4 Q    head [3:0] $end
$var reg       4 R    tail [3:0] $end
$var reg       4 S    next_head [3:0] $end
$var reg       4 T    next_tail [3:0] $end
$var reg       8 U    do_car [7:0] $end
$upscope $end


$scope module fc $end
$var wire      1 ,    clk  $end
$var wire      1 -    rst_n  $end
$var wire      1 /    wen  $end
$var wire      1 V    ren  $end
$var wire      8 4    din [7:0] $end
$var reg       8 W    dout [7:0] $end
$var reg       1 X    error  $end
$var reg       4 Y    head [3:0] $end
$var reg       4 Z    tail [3:0] $end
$var reg       4 [    next_head [3:0] $end
$var reg       4 \    next_tail [3:0] $end
$var reg       8 ]    do_car [7:0] $end
$upscope $end


$scope module fd $end
$var wire      1 ,    clk  $end
$var wire      1 -    rst_n  $end
$var wire      1 .    wen  $end
$var wire      1 ^    ren  $end
$var wire      8 5    din [7:0] $end
$var reg       8 _    dout [7:0] $end
$var reg       1 `    error  $end
$var reg       4 a    head [3:0] $end
$var reg       4 b    tail [3:0] $end
$var reg       4 c    next_head [3:0] $end
$var reg       4 d    next_tail [3:0] $end
$var reg       8 e    do_car [7:0] $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b1010 +
0!
0"
b0 #
b0 $
b0 %
b0 &
b0 '
bx (
x)
bz *
0,
0-
0.
0/
00
01
b0 2
b0 3
b0 4
b0 5
bx 6
x7
08
09
0:
0;
bx <
b0 =
b0 >
b0 ?
b0 @
0A
0B
0C
0D
bx E
0F
b0 G
0H
b0 I
b0 J
b1 K
b1 L
bx M
0N
b0 O
0P
b0 Q
b0 R
b1 S
b1 T
bx U
0V
b0 W
0X
b0 Y
b0 Z
b1 [
b1 \
bx ]
0^
b0 _
0`
b0 a
b0 b
b1 c
b1 d
bx e
$end
#5000
1!
1,
b0xx E
07
b0 6
b0 (
0)
#10000
0!
1"
b1111 #
b1010111 $
b111000 %
b1001 &
b1100 '
b1100 5
b1001 4
b111000 3
b1010111 2
1.
1/
10
11
1-
0,
bx _
b1 b
bx W
b1 Z
bx O
b1 R
bx G
b1 J
b10 d
b10 \
b10 T
b10 L
bx =
bx >
bx ?
bx @
#15000
1!
1,
b10 b
b10 Z
b10 R
b10 J
b11 d
b11 \
b11 T
b11 L
#20000
0!
b1000 #
bz $
bz %
bz &
b1010101 '
b1010101 5
bz 4
bz 3
bz 2
0/
00
01
0,
b11 b
b100 d
#25000
1!
1,
b100 b
b101 d
#30000
0!
b100 #
b10000001 &
bz '
bz 5
b10000001 4
0.
1/
0,
b11 Z
b100 \
#35000
1!
1,
b100 Z
b101 \
#40000
0!
b0 #
bz &
bz 4
0/
0,
#45000
1!
1,
#50000
0!
0,
#55000
1!
1,
#60000
0!
0,
#65000
1!
1,
#70000
0!
b1 #
b110011 $
b110011 2
11
0,
b11 J
b100 L
#75000
1!
1,
b100 J
b101 L
#80000
0!
b0 #
bz $
bz 2
01
0,
#85000
1!
1,
#90000
0!
0,
#95000
1!
1,
#100000
0!
